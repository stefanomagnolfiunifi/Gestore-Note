        -:    0:Source:C:/Users/stefa/CLionProjects/Gestore-Note/VariousCollection.h
        -:    0:Graph:C:\Users\stefa\CLionProjects\Gestore-Note\cmake-build-debug-coverage\test\CMakeFiles\runTests.dir\VariousCollectionTest.cpp.gcno
        -:    0:Data:C:\Users\stefa\CLionProjects\Gestore-Note\cmake-build-debug-coverage\test\CMakeFiles\runTests.dir\VariousCollectionTest.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by Stefano  Magnolfi on 08/08/2023.
        -:    3://
        -:    4:
        -:    5:#ifndef GESTORENOTE_VARIOUSCOLLECTION_H
        -:    6:#define GESTORENOTE_VARIOUSCOLLECTION_H
        -:    7:
        -:    8:#include <iostream>
        -:    9:#include "Collection.h"
        -:   10:#include "Subject.h"
        -:   11:
        -:   12:class VariousCollection : public Collection, public Subject{
        -:   13:public:
function _ZN17VariousCollectionC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 4 returned 100% blocks executed 100%
        4:   14:    explicit VariousCollection(const std::string& n): Collection(n){};
        4:   14-block  0
call    0 returned 4
call    1 returned 4
call    2 returned 4
        -:   15:    const std::list<Observer *> &getObservers() const {
        -:   16:        return observers;
        -:   17:    }
        -:   18:
function _ZN17VariousCollection7addNoteER4Nota called 1 returned 100% blocks executed 100%
        1:   19:    void addNote(Nota& nota) override{
        1:   20:        if(!nota.isBelonged()){
        1:   20-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:   21:            Collection::addNote(nota);
        1:   21-block  0
call    0 returned 1
        1:   22:            nota.setBelong();
call    0 returned 1
        1:   23:            notify();
call    0 returned 1
        -:   24:        }
        1:   25:    }
function _ZN17VariousCollection10removeNoteER4Nota called 1 returned 100% blocks executed 86%
        1:   26:    bool removeNote(Nota& nota) override{
        1:   27:        if(Collection::removeNote(nota)){
        1:   27-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:   28:            nota.setNotBelong();
        1:   28-block  0
call    0 returned 1
        1:   29:            notify();
call    0 returned 1
        1:   30:            return true;
        -:   31:        }
    #####:   32:        return false;
    %%%%%:   32-block  0
        -:   33:    }
function _ZN17VariousCollection11addObserverEP8Observer called 3 returned 100% blocks executed 100%
        3:   34:    void addObserver(Observer* o) override{
        3:   35:        observers.push_back(o);
        3:   35-block  0
call    0 returned 3
        3:   36:    }
function _ZN17VariousCollection14removeObserverEP8Observer called 3 returned 100% blocks executed 100%
        3:   37:    void removeObserver(Observer* o) override{
        3:   38:        observers.remove(o);
        3:   38-block  0
call    0 returned 3
        3:   39:    }
function _ZN17VariousCollection6notifyEv called 2 returned 100% blocks executed 60%
        2:   40:    void notify() override{
       2*:   41:        for(auto x:observers){
        2:   41-block  0
call    0 returned 2
call    1 returned 2
    %%%%%:   41-block  1
call    2 never executed
    %%%%%:   41-block  2
call    3 never executed
        2:   41-block  3
call    4 returned 2
branch  5 taken 0
branch  6 taken 2 (fallthrough)
    #####:   42:            x->update(static_cast<int> (notesList.size()));
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:   43:        }
        2:   44:    }
        2:   44-block  0
        -:   45:private:
        -:   46:    std::list<Observer*> observers;
        -:   47:};
        -:   48:
        -:   49:
        -:   50:
        -:   51:#endif //GESTORENOTE_VARIOUSCOLLECTION_H
